# TODO: 부분 집합 

# [ ] 부분 집합 합 문제
# 유한 개의 정수로 이루어진 집합이 있을 때, 이 집합의 부분 집합 중에서 
# 그 집합의 원소를 모두 더한 값이 0이 되는 경우가 있는지를 알아내는 문제

# Solution : 완전 검색 기법으로 부분 집합 합 문제를 풀기 위해서는 
# 우선 집합의 모든 부분 집합을 생성한 후 각 부분 집합의 합을 계산함

# [ ] 부분 집합의 수 
# 어떤 집합의 부분 집합을 구할 경우 부분 집합의 촘 개수가 몇 개일까요?
# 원소의 개수가 n일 떄, 2^n개 

# [ ] 간결하게 부분 집합을 생성하는 방법
arr = [3,6,7,1,5,4]
n = len(arr) 

for i in range(1<<n): # 1<<n : 부분 집합의 개수
    for j in range(n) : # 원소의 수만큼 비트를 비교함
        if i&(1<<j): # i의 j번째 비트가 1이면 j번째 원소 출력
            print(arr[j],end =",")
    print()